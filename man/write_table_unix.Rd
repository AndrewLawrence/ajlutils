% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/misc.R
\name{write_table_unix}
\alias{write_table_unix}
\title{write_table_unix}
\usage{
write_table_unix(
  x,
  file,
  quote = FALSE,
  col.names = FALSE,
  row.names = FALSE,
  eol = "\\n",
  sep = "\\t",
  ...
)
}
\arguments{
\item{x}{the object to be written, preferably a matrix or data frame.
    If not, it is attempted to coerce \code{x} to a data frame.}

\item{file}{either a character string naming a file or a \link{connection}
    open for writing.  \code{""} indicates output to the console.}

\item{quote}{a logical value (\code{TRUE} or \code{FALSE}) or a
    numeric vector.  If \code{TRUE}, any character or factor columns
    will be surrounded by double quotes.  If a numeric vector, its
    elements are taken as the indices of columns to quote.  In both
    cases, row and column names are quoted if they are written.  If
    \code{FALSE}, nothing is quoted.}

\item{col.names}{either a logical value indicating whether the column
    names of \code{x} are to be written along with \code{x}, or a
    character vector of column names to be written.  See the section on
    \sQuote{CSV files} for the meaning of \code{col.names = NA}.}

\item{row.names}{either a logical value indicating whether the row
    names of \code{x} are to be written along with \code{x}, or a
    character vector of row names to be written.}

\item{eol}{the character(s) to print at the end of each line (row).
    For example, \code{eol = "\r\n"} will produce Windows' line endings on
    a Unix-alike OS, and \code{eol = "\r"} will produce files as expected by
    Excel:mac 2004.}

\item{sep}{the field separator string.  Values within each row of
    \code{x} are separated by this string.}

\item{...}{further arguments passed to \code{\link[utils]{write.table}}}
}
\description{
Wrapper to write in binary mode
    with defaults tailored for producing a file which can be read directly
    by a shell script on a unix system. This is a relatively common task
    and this approach avoids the need for invoking \code{dos2unix}.
}
\details{
The file is opened in write-only binary mode ('wb') and
   \code{\link[utils]{write.table}} is invoked with the following
    key (modifiable) defaults:
    \itemize{
     \item unix line endings (`\\n`)
     \item no quotes
     \item tab separated
     \item no rownames or colnames
    }
}
\examples{
\dontrun{
  x <- c("apple", "table", "penny")
  y <- 1:3
  write_table_unix(data.frame(x,y), file = "test.tsv")
}



}
